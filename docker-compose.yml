services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: gupload-api:latest
    container_name: gupload-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - upload_data:/app/uploads
      - ./.env:/app/.env
      - ./:/app/workspace
    environment:
      - APP_ENV=staging
      - LOG_LEVEL=info
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gupload
      - JWT_SECRET=your_secret_key_here
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: gupload-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gupload
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  upload_data:
  postgres_data: